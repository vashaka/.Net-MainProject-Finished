@model IEnumerable<TransactionDto>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.5/css/jquery.dataTables.min.css">
<script src="https://cdn.datatables.net/1.13.5/js/jquery.dataTables.min.js"></script>

<div class="card p-2">
    <h3>Transactions</h3>
    <div>
        <label>Start Date: <input type="date" id="startDate"></label>
        <label>End Date: <input type="date" id="endDate"></label>
    </div>
    <table class="mt-5" id="transactionsTable" style="width: 100%;">
        <thead>
            <tr>
                <th>Transaction ID</th>
                <th>Transaction-Type</th>
                <th>Amount</th>
                <th>Status</th>
                <th>Date</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
    <h1 id="noTransactions" style="display: none;">No Transactions YET</h1>
</div>

<script>
    $(document).ready(function () {
        var table = $('#transactionsTable').DataTable();

        function fetchTransactions(startDate, endDate) {
            $.ajax({
                url: '/Filter',
                method: 'GET',
                data: {
                    startDate: startDate,
                    endDate: endDate
                },
                success: function (data) {
                    table.clear().draw();

                    if (data.length === 0) {
                        $('#noTransactions').show();
                    } else {
                        $('#noTransactions').hide();

                        data.forEach(function (transaction) {
                            var currencySymbol = transaction.currency === 1 ? "₾" :
                                                 transaction.currency === 2 ? "$" :
                                                 transaction.currency === 3 ? "€" : "idk";
                            table.row.add([
                                transaction.id,
                                transaction.transactionType,
                                currencySymbol + transaction.amount.toFixed(2),
                                transaction.status,
                                transaction.createdAt
                            ]).draw(false);
                        });
                    }
                },
                error: function (xhr) {
                    console.error('Error fetching transactions:', xhr);
                }
            });
        }

        fetchTransactions();

        $('#startDate, #endDate').on('change', function () {
            var startDate = $('#startDate').val();
            var endDate = $('#endDate').val();
            fetchTransactions(startDate, endDate);
        });
    });
</script>
